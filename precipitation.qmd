# Precipitation {.unnumbered}

```{r setup}
#| include: false
rm(list = ls()) ; invisible(gc()) ; set.seed(42)
library(tidyverse)
library(terra)
library(sf)
library(spatialreg)
library(spdep)
knitr::opts_chunk$set(
  echo = F, message = F, warning = F, fig.height = 6, fig.width = 8,
  cache = T, cache.lazy = F)
```

## Capricho

We used ERA5-Land data at 0.01-degree resolution with hourly precipitation aggregated to the day.

```{r era}
data <- vroom::vroom("~/Documents/getEra/results/hourly/era5_capricho.csv") %>% 
  filter(year(date) %in% 2000:2023) %>% 
  group_by(date = date(date)) %>% 
  summarise(precipitation = sum(precipitation))
```

### Day

```{r}
data %>% 
  ggplot(aes(date, precipitation)) +
  geom_line() +
  geom_point() +
  theme_bw() +
  xlab("") + ylab("Precipitation (mm/day)")
```

```{r}
data %>% 
  mutate(year = year(date)) %>% 
  mutate(day = yday(date)) %>% 
  ggplot(aes(day, precipitation)) +
  geom_line(aes(group = year, col = year)) +
  theme_bw() +
  geom_smooth(col = "red") +
  scale_color_viridis_c() +
  xlab("") + ylab("Precipitation (mm/day)") +
  scale_x_continuous(breaks = yday(as_date(paste0("2001-", 1:12, "-1"))),
                     labels = c("J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"))
```

### Pentad

```{r}
data %>% 
  group_by(date = round_date(date, "5 days")) %>% 
  summarise(precipitation = sum(precipitation)) %>% 
  ggplot(aes(date, precipitation)) +
  geom_line() +
  geom_point() +
  theme_bw() +
  xlab("") + ylab("Precipitation (mm/pentad)")
```

```{r}
data %>% 
  group_by(date = round_date(date, "5 days")) %>% 
  summarise(precipitation = sum(precipitation)) %>% 
  mutate(year = year(date)) %>% 
  mutate(day = yday(date)) %>% 
  ggplot(aes(day, precipitation)) +
  geom_line(aes(group = year, col = year)) +
  theme_bw() +
  geom_smooth(col = "red") +
  scale_color_viridis_c() +
  xlab("") + ylab("Precipitation (mm/pentad)") +
  scale_x_continuous(breaks = yday(as_date(paste0("2001-", 1:12, "-1"))),
                     labels = c("J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"))
```

### Biweek

```{r}
data %>% 
  group_by(date = round_date(date, "15 days")) %>% 
  summarise(precipitation = sum(precipitation)) %>% 
  ggplot(aes(date, precipitation)) +
  geom_line() +
  geom_point() +
  theme_bw() +
  xlab("") + ylab("Precipitation (mm/15-days)")
```

```{r}
data %>% 
  group_by(date = round_date(date, "15 days")) %>% 
  summarise(precipitation = sum(precipitation)) %>% 
  mutate(year = year(date)) %>% 
  mutate(day = yday(date)) %>% 
  ggplot(aes(day, precipitation)) +
  geom_line(aes(group = year, col = year)) +
  theme_bw() +
  geom_smooth(col = "red") +
  scale_color_viridis_c() +
  xlab("") + ylab("Precipitation (mm/15-days)") +
  scale_x_continuous(breaks = yday(as_date(paste0("2001-", 1:12, "-1"))),
                     labels = c("J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"))
```

### Month

```{r}
data %>% 
  group_by(date = round_date(date, "month")) %>% 
  summarise(precipitation = sum(precipitation)) %>% 
  ggplot(aes(date, precipitation)) +
  geom_line() +
  geom_point() +
  theme_bw() +
  xlab("") + ylab("Precipitation (mm/month)")
```

```{r}
data %>% 
  group_by(date = round_date(date, "month")) %>% 
  summarise(precipitation = sum(precipitation)) %>% 
  mutate(year = year(date)) %>% 
  mutate(day = yday(date)) %>% 
  ggplot(aes(day, precipitation)) +
  geom_line(aes(group = year, col = year)) +
  theme_bw() +
  geom_smooth(col = "red") +
  scale_color_viridis_c() +
  xlab("") + ylab("Precipitation (mm/month)") +
  scale_x_continuous(breaks = yday(as_date(paste0("2001-", 1:12, "-1"))),
                     labels = c("J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"))
```

### Year

```{r}
data %>% 
  group_by(date = round_date(date, "year")) %>% 
  summarise(precipitation = sum(precipitation)) %>% 
  ggplot(aes(date, precipitation)) +
  geom_line() +
  geom_point() +
  theme_bw() +
  xlab("") + ylab("Precipitation (mm/year)")
```

```{r}
data %>% 
  group_by(date = floor_date(date, "month")) %>% 
  summarise(precipitation = sum(precipitation)) %>% 
  group_by(date = floor_date(date, "year")) %>% 
  summarise(delta_precipitation = quantile(precipitation, 0.95) - quantile(precipitation, 0.05)) %>% 
  ggplot(aes(date, delta_precipitation)) +
  geom_line() +
  theme_bw() +
  xlab("") + ylab("Yearly variations of monthly precipitation (mm/year)") +
  ggtitle("Yearly variability in Capricho") +
  geom_smooth(col = "red")
```

```{r tmfcpdata}
#| include: false
area <- st_read("data/capricho/capricho.shp", quiet=T)
get_deforest_area <- function(year, tile = "SAM_ID47_N10_W80"){
  tmf <- rast(
    paste0("data/JRC_TMF_AnnualChange_v1_", 
           tile,
           "/forobs/products/tmf_v1/AnnualChange/JRC_TMF_AnnualChange_v1_", year, "_",
           tile,
           ".tif")) %>% crop(area) %>% 
  mask(area)
tmf <- as.numeric(tmf == 3)
tmf <- tmf*cellSize(tmf, unit = 'km')
  return(data.frame(year = year, area = sum(values(tmf), na.rm = T)))
}
deforest <- lapply(2000:2022, get_deforest_area) %>% 
  bind_rows()
```

```{r}
data %>% 
  group_by(date = floor_date(date, "month")) %>% 
  summarise(precipitation = sum(precipitation)) %>% 
  group_by(year = as.integer(year(date))) %>% 
  summarise(delta_precipitation = quantile(precipitation, 0.95) - quantile(precipitation, 0.05)) %>% 
  left_join(deforest) %>% 
  ggplot(aes(area, delta_precipitation, col = year)) +
  geom_point() +
  theme_bw() +
  geom_smooth(method = "lm") +
  ggpubr::stat_cor() +
  xlab("Cummulated deforested area (km2)") +
  ylab("Yearly variations of monthly precipitation (mm/year)") +
  scale_color_viridis_c()
```

### Dry season

> The observed DSE is determined by the first date when the pentad mean rain rate changes from below to above the climatological annual mean rain rate of the same rainfall dataset during six out of eight pentads, and vice versa for the DSA ([19](https://www.pnas.org/doi/full/10.1073/pnas.1302584110#core-r19)). This definition captures the rapid transition from a lower to higher rainfall regime associated with the DSE, and vice versa for the DSA. The DSE and DSA are not influenced by any bias of rainfall amount, as long as the temporal patterns of the rainfall variation are not affected. Similar definitions have been widely used in the literature ([18](https://www.pnas.org/doi/full/10.1073/pnas.1302584110#core-r18), [19](https://www.pnas.org/doi/full/10.1073/pnas.1302584110#core-r19), [23](https://www.pnas.org/doi/full/10.1073/pnas.1302584110#core-r23)). For analysis of models, we modify our criterion to five out of eight pentads to best match the modeled DSE and DSA with observations. @fu2013

```{r}
pentads <- data %>% 
  group_by(date = round_date(date, "5 days")) %>% 
  summarise(precipitation = sum(precipitation)) %>% 
  mutate(year = year(date)) %>% 
  mutate(day = yday(date)) %>% 
  group_by(year) %>% 
  mutate(relative_precipitation = precipitation - mean(precipitation))
ggplot(pentads, aes(day, relative_precipitation)) +
  geom_line(aes(group = year, col = year)) +
  theme_bw() +
  geom_hline(yintercept = 0, col = "red") +
  geom_vline(xintercept = yday(as_date(paste0("2001-03-26"))), col = "red") +
  geom_vline(xintercept = yday(as_date(paste0("2001-07-26"))), col = "red") +
  scale_color_viridis_c() +
  xlab("") + ylab("Precipitation (mm/month)") +
  scale_x_continuous(breaks = yday(as_date(paste0("2001-", 1:12, "-1"))),
                     labels = c("J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"))
```

```{r}
dsa <- pentads %>% 
  mutate(positive = as.numeric(relative_precipitation > 0)) %>% 
  mutate(height_pentads = zoo::rollsum(positive, 8, align = "left", fill = NA)) %>% 
  filter(height_pentads >= 6) %>% 
  group_by(year) %>% 
  slice_min(day) %>% 
  mutate(dsa = day) %>% 
  select(year, dsa)
dsl <- pentads %>% 
  left_join(dsa) %>% 
  group_by(year) %>% 
  filter(day > dsa) %>% 
  mutate(negative = as.numeric(relative_precipitation < 0)) %>% 
  mutate(height_pentads = zoo::rollsum(negative, 8, align = "left", fill = NA)) %>% 
  filter(height_pentads >= 6) %>% 
  slice_min(day) %>% 
  mutate(dse = day) %>% 
  select(year, dsa, dse) %>% 
  mutate(dsl = 365 + dsa - dse)
dsl %>% 
  gather(variable, value, -year) %>% 
  ggplot(aes(year, value)) +
  geom_point() +
  facet_wrap(~ variable, scales = "free") +
  theme_bw() +
  geom_smooth(method = "lm") +
  ggpubr::stat_cor() +
  theme(legend.position = "bottom")
```

## Colombian Amazon

We used CHIRPS data downscaled at 0.01-degree resolution with pentad (5-days) precipitation accumulation. Yearly precipitation changes were then calculated by computing the monthly means over two periods at the end (2020 to 2022) and start (2000 to 2002) of the study period. Using 3-y averages reduces the influences of climate variability.

```{r data}
#| include: false
pr_ind <- rast("results/data/chirps_indices_amazon.nc")
pr <- rast("results/data/chirps_anomalies_amazon.nc")
deforest <- rast("results/data/tmf_deforested_2022_2000_amzaon.tif") %>% 
  resample(pr)
data <- lapply(deforest, as.data.frame, xy = T) %>% 
  bind_rows() %>% 
  left_join(as.data.frame(pr, xy = TRUE)) %>% 
  na.omit() %>% 
  mutate(intact = 1)
```

```{r ca2022}
ggplot() +
  tidyterra::geom_spatraster(data = pr_ind[[22]]) +
  geom_sf(data = st_read("data/capricho/capricho.shp", quiet = TRUE),
          fill = NA, col = "red", linewidth = 1.5) +
  theme_bw() +
  scale_fill_viridis_c("mm", na.value = NA) +
  ggtitle("Precipitaiton 2022")
```

```{r caanom}
ggplot() +
  tidyterra::geom_spatraster(data = pr) +
  geom_sf(data = st_read("data/capricho/capricho.shp", quiet = TRUE),
          fill = NA, col = "red", linewidth = 1.5) +
  theme_bw() +
  scale_fill_viridis_c("mm", na.value = NA) +
  ggtitle("Precipitation anomalies", "2000:2002 vs 2020:2022")
```

### Comparisons

Comparing deforestation surfaces to climate anomalies seems to indicate a decrease in precipitation with increasing deforestation surfaces. But caution should be taken because of possible spatial proximity between deforested pixels that could confound with the spatial structure of climate anomalies.

```{r cacomp}
step <- 5
top <- 200
data %>% 
  mutate(deforest = cut(deforest, breaks = seq(0, top, by = step),
                               labels = seq(0, (top-step), by = step)+step/2)) %>% 
  mutate(deforest = as.numeric(as.character(deforest))) %>% 
  na.omit() %>% 
  ggplot(aes(deforest, precipitation)) +
  geom_boxplot(aes(group = as.character(deforest))) +
  theme_bw() +
  geom_smooth() +
  xlab("Deforestation surface (km2, 2000-2022)") +
  ylab("January anomalies of mean temperature at surface")
```

### Linear regressions

Classic linear regression without accounting for spatial autocorrelation found a general and significant decrease in precipitation (-240mm/year) and a significant decrease in precipitation (-81mm/year) with deforestation. However, inspecting models residuals revealed a significant spatial autocorrelation of model errors up to several hundred of kilometres questioning the robustness of the results.

```{r calm}
reg <- lm(precipitation ~ deforest, data)
sjPlot::tab_model(reg)
```

```{r calmcor}
data$res <- residuals(reg) 
cor <- pgirmess::correlog(data.frame(data$x, data$y), data$res,
                   method = "Moran", nbclass = 30) %>% 
    as.data.frame()
cor %>% 
  ggplot(aes(x = dist.class*100, y = coef)) + 
  geom_point(aes(alpha = p.value < 0.01)) + geom_line() +
  geom_hline(yintercept = 0) +
  theme_bw() +
  xlab("Distance (km)") + ylab("Moran\'s I") +
  scale_x_log10() +
  ylim(-1, 1) +
  ggtitle("Residuals spatial auto-correlation")
```

### Spatial regressions

To account for spatial autocorrelation, we took advantage of a method including spatial autocorrelation in model error (spNNGP, Gaussian univariate Bayesian spatial regression models using Nearest Neighbor Gaussian Processes, see note below). We found only a small significant effect of deforestation on precipitation decrease accounting for spatial autocorrelation (-3mm/year).

```{r}
nb <- dnearneigh(data[c("x", "y")], 0, 50, longlat = T)
sr <- spautolm(precipitation ~ deforest, data, 
               listw = nb2listw(nb, zero.policy = TRUE), family = "SAR")
summary(sr)
```

```{r casrcor}
data$res <- residuals(sr)
cor <- pgirmess::correlog(data.frame(data$x, data$y), data$res,
                   method = "Moran", nbclass = 30) %>% 
    as.data.frame()
cor %>% 
  ggplot(aes(x = dist.class*100, y = coef)) + 
  geom_point(aes(alpha = p.value < 0.01)) + geom_line() +
  geom_hline(yintercept = 0) +
  theme_bw() +
  xlab("Distance (km)") + ylab("Moran\'s I") +
  scale_x_log10() +
  ylim(-1, 1) +
  ggtitle("Residuals spatial auto-correlation")
```
