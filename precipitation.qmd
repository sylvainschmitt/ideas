# Precipitation {.unnumbered}

```{r setup}
#| include: false
rm(list = ls()) ; invisible(gc()) ; set.seed(42)
library(tidyverse)
library(terra)
library(sf)
library(spdep)
library(spatialreg)
theme_set(bayesplot::theme_default())
knitr::opts_chunk$set(
  echo = F, message = F, warning = F, fig.height = 6, fig.width = 8,
  cache = T, cache.lazy = F)
```

We used CHIRPS data downscaled at 0.01-degree resolution with daily precipitation accumulation. Monthly precipitation precipitation changes were then calculated by (1) summing precipitation for each month of every year, (2) computing the monthly means over two periods at the end (2018 to 2020) and start (2001 to 2003) of the study period. Using 3-y averages reduces the influences of climate variability.

```{r climdat}
data <- rast("results/data/chirps_month.nc") %>% 
  as.data.frame() %>% 
  gather(time, value) %>% 
  group_by(time) %>% 
  summarise(l = quantile(value, 0.025, na.rm = TRUE), 
            m = mean(value, na.rm = TRUE), 
            h = quantile(value, 0.975, na.rm = TRUE)) %>% 
  mutate(time = time(rast("results/data/chirps_month.nc")))
```

```{r climvaryear}
ggplot(data, aes(time, m)) +
  geom_ribbon(aes(ymin = l, ymax = h), col = NA, alpha = 0.2) +
  geom_line() +
  geom_point() +
  theme_bw() +
  theme(axis.title = element_blank())
```

```{r climvarmonth}
data %>% 
  mutate(month = month(time), year = as.factor(year(time))) %>%
  ggplot(aes(month, m, col = year, fill = year)) +
  geom_ribbon(aes(ymin = l, ymax = h), col = NA, alpha = 0.2) +
  geom_line() +
  geom_point() +
  theme_bw() +
  theme(axis.title = element_blank())
```

```{r climvarmonthmean}
data %>% 
  mutate(month = month(time)) %>%
  group_by(month) %>% 
  mutate_all(mean) %>% 
  ggplot(aes(month, m)) +
  geom_ribbon(aes(ymin = l, ymax = h), col = NA, alpha = 0.2) +
  geom_line() +
  geom_point() +
  theme_bw() +
  theme(axis.title = element_blank()) +
  geom_vline(xintercept = c(1, 6))
```

```{r climvar}
rast("results/data/chirps_indices.nc") %>% 
  as.data.frame() %>% 
  gather(varyear, value) %>% 
  group_by(varyear) %>% 
  summarise(l = quantile(value, 0.025, na.rm = TRUE), 
            m = mean(value, na.rm = TRUE), 
            h = quantile(value, 0.975, na.rm = TRUE)) %>% 
  separate(varyear, c("variable", "year"), "_year=", convert = T) %>% 
  ggplot(aes(year, m, col = variable, fill = variable)) +
  geom_ribbon(aes(ymin = l, ymax = h), col = NA, alpha = 0.2) +
  geom_line() +
  geom_point() +
  theme_bw() +
  theme(axis.title = element_blank()) +
  facet_wrap(~ variable, nrow = 3, scales = "free_y") +
  geom_vline(xintercept = c(2001, 2003, 2018, 2020))
```

```{r data}
clim_r <- rast("results/data/chirps_anomalies.nc")
area <- st_read("results/area/Guaviare/Guaviare.shp", quiet=T) %>% 
  st_set_crs(crs(clim_r))
deforest <- rast("results/data/tmf_deforested_2020.tif") %>% 
  resample(clim_r) %>% 
  crop(area) %>% 
  mask(area)
degrad <- rast("results/data/tmf_degraded_2020.tif") %>% 
  resample(clim_r) %>% 
  crop(area) %>% 
  mask(area)
clim_r <- clim_r %>% 
  crop(area) %>% 
  mask(area)
data <- as.data.frame(clim_r, xy = TRUE) %>% 
  left_join(as.data.frame(deforest, xy = TRUE)) %>% 
  rename(deforested = Dec2020) %>% 
  left_join(as.data.frame(degrad, xy = TRUE)) %>% 
  rename(degraded = Dec2020) %>% 
  mutate(degraded = ifelse(degraded < 0.05, 0, degraded)) %>% 
  na.omit()
data_nn <- data %>% 
  filter(deforested + degraded > 0)
```

```{r climplot}
ggplot() +
  tidyterra::geom_spatraster(data = clim_r[["pr"]]) +
  theme_bw() +
  scale_fill_viridis_c(expression(delta~P), na.value = NA) +
  ggtitle("Guiavare total Precipitation anomalies", 
          "2018-2020 versus 2001-2003 from CHIRPS")
```

## All

```{r}
data2 <- sample_n(data, 1000)
cor1 <- pgirmess::correlog(data.frame(data2$x, data2$y), data2$pr,
                   method = "Moran", nbclass = 30) %>% 
  as.data.frame() %>% 
  mutate(variable = "pr")
cor2 <- pgirmess::correlog(data.frame(data2$x, data2$y), data2$pr_jan,
                   method = "Moran", nbclass = 30) %>% 
  as.data.frame() %>% 
  mutate(variable = "pr_jan")
cor3 <- pgirmess::correlog(data.frame(data2$x, data2$y), data2$pr_jun,
                   method = "Moran", nbclass = 30) %>% 
  as.data.frame() %>% 
  mutate(variable = "pr_jun")
bind_rows(cor1, cor2, cor3) %>% 
  ggplot(aes(x = dist.class*100, y = coef, col = variable)) + 
  geom_point(aes(alpha = p.value < 0.01)) + geom_line() +
  geom_hline(yintercept = 0) +
  theme_bw() +
  xlab("Distance (km)") + ylab("Moran\'s I") +
  scale_x_log10()
```

```{r}
data_test <- data %>% 
  sample_n(1000) %>%
  mutate(intact = 1)
data_adj <- dnearneigh(data_test[c("x", "y")], 0, 10, longlat = T)
plot(data_adj, data_test[c("x", "y")])
```

```{r}
data_test <- data %>% 
  sample_n(10000) %>% 
  mutate(intact = 1)
data_adj <- dnearneigh(data_test[c("x", "y")], 0, 10, longlat = T)
```

```{r}
data %>% 
  gather(climate, value, -x, -y, -deforested, -degraded) %>% 
  gather(type, percent, -x, -y, -climate, -value) %>% 
  ggplot(aes(percent, value, col = climate)) +
  geom_point(alpha = 0.1) +
  theme_bw() +
  facet_wrap(~ type, nrow = 2) +
  geom_smooth(method = "lm")
```

```{r }
reg <- spautolm(pr ~ 0 + intact + degraded + deforested, 
                data = data_test, 
                listw = nb2listw(data_adj, zero.policy = TRUE), 
                family = "CAR")
summary(reg)
```

```{r }
data2 <- data_test
data2$res <- residuals(reg)
data2 <- sample_n(data2, 1000)
cor <- pgirmess::correlog(data.frame(data2$x, data2$y), data2$res,
                   method = "Moran", nbclass = 30) %>% 
    as.data.frame()
cor %>% 
  ggplot(aes(x = dist.class*100, y = coef)) + 
  geom_point(aes(alpha = p.value < 0.01)) + geom_line() +
  geom_hline(yintercept = 0) +
  theme_bw() +
  xlab("Distance (km)") + ylab("Moran\'s I") +
  scale_x_log10()
```

## Non null

```{r}
data_test <- data_nn %>% 
  sample_n(1000) %>%
  mutate(intact = 1)
data_adj <- dnearneigh(data_test[c("x", "y")], 0, 10, longlat = T)
plot(data_adj, data_test[c("x", "y")])
```

```{r}
data_test <- data_nn %>%
  mutate(intact = 1)
data_adj <- dnearneigh(data_test[c("x", "y")], 0, 10, longlat = T)
```

```{r}
data_nn %>% 
  gather(climate, value, -x, -y, -deforested, -degraded) %>% 
  gather(type, percent, -x, -y, -climate, -value) %>% 
  ggplot(aes(percent, value, col = climate)) +
  geom_point(alpha = 0.1) +
  theme_bw() +
  facet_wrap(~ type, nrow = 2) +
  geom_smooth(method = "lm")
```

```{r }
reg <- spautolm(pr ~ 0 + intact + degraded + deforested, 
                data = data_test, 
                listw = nb2listw(data_adj, zero.policy = TRUE), 
                family = "CAR")
summary(reg)
```

```{r }
data2 <- data_test
data2$res <- residuals(reg)
data2 <- sample_n(data2, 1000)
cor <- pgirmess::correlog(data.frame(data2$x, data2$y), data2$res,
                   method = "Moran", nbclass = 30) %>% 
    as.data.frame()
cor %>% 
  ggplot(aes(x = dist.class*100, y = coef)) + 
  geom_point(aes(alpha = p.value < 0.01)) + geom_line() +
  geom_hline(yintercept = 0) +
  theme_bw() +
  xlab("Distance (km)") + ylab("Moran\'s I") +
  scale_x_log10()
```

## Non null - spNNGP

```{r}
library(bayesplot)
library(spNNGP)
rescale <- function(x) (x - mean(x))/(quantile(x,0.975) - quantile(x,0.025))
sim.s <- spNNGP(formula = pr ~ rescale(degraded) + rescale(deforested),
                data = data_nn,
                coords = data_nn[c("x", "y")], 
                starting = list("phi" = 3 / 0.5, "sigma.sq" = 1, "tau.sq" = 1),
                tuning = list("phi" = 0.2), 
                priors = list("phi.Unif" = c(3 / 1, 3 / 0.1), "sigma.sq.IG" = c(2, 1), "tau.sq.IG" = c(2, 1)), 
                cov.model = "exponential",
                n.samples = 2000, 
                n.neighbors = 10, method = "latent", 
                ord = order(data_nn[, "x"] + data_nn[, "y"]),
                n.omp.threads = 4, n.report = 1000, fit.rep = TRUE,
                sub.sample = list(start = 1000), return.neighbor.info = TRUE)
```

```{r}
summary(sim.s)
```

```{r}
mcmc_trace(sim.s$p.beta.samples, n_warmup = 1000)
```

```{r}
mcmc_dens(sim.s$p.beta.samples[1001:2000,])
```

```{r }
data2 <- data_test
data2$res <- residuals(sim.s)$residuals.quantiles[,1]
data2 <- sample_n(data2, 1000)
cor <- pgirmess::correlog(data.frame(data2$x, data2$y), data2$res,
                   method = "Moran", nbclass = 30) %>% 
    as.data.frame()
cor %>% 
  ggplot(aes(x = dist.class*100, y = coef)) + 
  geom_point(aes(alpha = p.value < 0.01)) + geom_line() +
  geom_hline(yintercept = 0) +
  theme_bw() +
  xlab("Distance (km)") + ylab("Moran\'s I") +
  scale_x_log10()
```

## Non null - brms

```{r}
library(brms)
library(bayesplot)
data_test <- data_nn %>% 
  sample_n(1000) %>%
  mutate(intact = 1)
N <- nrow(data_test)
distances <- as.matrix(dist(data_test[c("x", "y")])*(1/0.01))
W <- array(0, c(N, N))
W[distances <= 10] <- 1
fit <- brm(pr ~ 0 + intact + degraded + deforested + car(W, type = "icar"),
           data = data_test, data2 = list(W = W), cores = 20)
summary(fit)
```

```{r}
mcmc_trace(fit, regex_pars = c("intact", "de"))
```

```{r}
mcmc_hist(fit, regex_pars = c("intact", "de"))
```
