# Temperature {.unnumbered}

```{r setup}
#| include: false
rm(list = ls()) ; invisible(gc()) ; set.seed(42)
library(tidyverse)
library(terra)
library(sf)
library(spdep)
library(spatialreg)
theme_set(bayesplot::theme_default())
knitr::opts_chunk$set(
  echo = F, message = F, warning = F, fig.height = 6, fig.width = 8,
  cache = T, cache.lazy = F)
```

Following @butt2023, we used land surface temperature (LST) data from MOD11A2 version 6 MODIS 8-d LST data at 0.01-degree resolution grid. We excluded data where the estimated emissivity error was greater than 0.02 and where the LST error was greater than 1 K. Extensive cloud cover can reduce the spatial and temporal availability of satellite data. For this reason, we focus our analysis on the dry season when there is less cloud cover. We thus worked with January the driest month in Guiavare. Dry season surface temperature changes were then calculated by comparing temperature of the driest month for two periods at the end (2018 to 2020) and start (2001 to 2003) of the study period. Using 3-y averages reduces the influences of climate variability. We computed both variations in mean temperature (tas), maximum temperature (tasmax), and minimum temperature (tasmin).

```{r climvar}
rast("results/data/modis_indices.nc") %>% 
  as.data.frame() %>% 
  gather(varyear, value) %>% 
  group_by(varyear) %>% 
  summarise(l = quantile(value, 0.025, na.rm = TRUE), 
            m = mean(value, na.rm = TRUE), 
            h = quantile(value, 0.975, na.rm = TRUE)) %>% 
  separate(varyear, c("variable", "year"), "_year=", convert = T) %>% 
  ggplot(aes(year, m, col = variable, fill = variable)) +
  geom_ribbon(aes(ymin = l, ymax = h), col = NA, alpha = 0.2) +
  geom_line() +
  geom_point() +
  theme_bw() +
  theme(axis.title = element_blank()) +
  geom_vline(xintercept = c(2001, 2003, 2018, 2020))
```

```{r data}
clim_r <- rast("results/data/modis_anomalies.nc")
area <- st_read("results/area/Guaviare/Guaviare.shp", quiet=T) %>% 
  st_set_crs(crs(clim_r))
deforest <- rast("results/data/tmf_deforested_2020.tif") %>% 
  resample(clim_r) %>% 
  crop(area) %>% 
  mask(area)
degrad <- rast("results/data/tmf_degraded_2020.tif") %>% 
  resample(clim_r) %>% 
  crop(area) %>% 
  mask(area)
clim_r <- clim_r %>% 
  crop(area) %>% 
  mask(area)
data <- as.data.frame(clim_r, xy = TRUE) %>% 
  left_join(as.data.frame(deforest, xy = TRUE)) %>% 
  rename(deforested = Dec2020) %>% 
  left_join(as.data.frame(degrad, xy = TRUE)) %>% 
  rename(degraded = Dec2020) %>% 
  mutate(degraded = ifelse(degraded < 0.05, 0, degraded)) %>% 
  na.omit()
data_nn <- data %>% 
  filter(deforested + degraded > 0) 
```

```{r climplot}
ggplot() +
  tidyterra::geom_spatraster(data = clim_r[["tas"]]) +
  theme_bw() +
  scale_fill_viridis_c(expression(delta~T), na.value = NA) +
  ggtitle("Guiavare January mean Temperature anomalies", 
          "2018-2020 versus 2001-2003 from MODIS MOD11A2 LST")
```

## All

```{r}
data2 <- sample_n(data, 1000)
cor1 <- pgirmess::correlog(data.frame(data2$x, data2$y), data2$tas,
                   method = "Moran", nbclass = 30) %>% 
  as.data.frame() %>% 
  mutate(variable = "tas")
cor2 <- pgirmess::correlog(data.frame(data2$x, data2$y), data2$tasmax,
                   method = "Moran", nbclass = 30) %>% 
  as.data.frame() %>% 
  mutate(variable = "tasmax")
cor1 <- pgirmess::correlog(data.frame(data2$x, data2$y), data2$tas,
                   method = "Moran", nbclass = 30) %>% 
  as.data.frame() %>% 
  mutate(variable = "tas")
cor3 <- pgirmess::correlog(data.frame(data2$x, data2$y), data2$tasmin,
                   method = "Moran", nbclass = 30) %>% 
  as.data.frame() %>% 
  mutate(variable = "tasmin")
bind_rows(cor1, cor2, cor3) %>% 
  ggplot(aes(x = dist.class*100, y = coef, col = variable)) + 
  geom_point(aes(alpha = p.value < 0.01)) + geom_line() +
  geom_hline(yintercept = 0) +
  theme_bw() +
  xlab("Distance (km)") + ylab("Moran\'s I") +
  scale_x_log10()
```

```{r}
data_test <- data %>% 
  sample_n(1000) %>%
  mutate(intact = 1)
data_adj <- dnearneigh(data_test[c("x", "y")], 0, 10, longlat = T)
plot(data_adj, data_test[c("x", "y")])
```

```{r}
data_test <- data %>% 
  sample_n(10000) %>% 
  mutate(intact = 1)
data_adj <- dnearneigh(data_test[c("x", "y")], 0, 10, longlat = T)
```

```{r}
data %>% 
  gather(climate, value, -x, -y, -deforested, -degraded) %>% 
  gather(type, percent, -x, -y, -climate, -value) %>% 
  ggplot(aes(percent, value, col = climate)) +
  geom_point(alpha = 0.1) +
  theme_bw() +
  facet_wrap(~ type, nrow = 2) +
  geom_smooth(method = "lm")
```

```{r }
reg <- spautolm(tasmax ~ 0 + intact + degraded + deforested, 
                data = data_test, 
                listw = nb2listw(data_adj, zero.policy = TRUE), 
                family = "CAR")
summary(reg)
```

```{r }
data2 <- data_test
data2$res <- residuals(reg)
data2 <- sample_n(data2, 1000)
cor <- pgirmess::correlog(data.frame(data2$x, data2$y), data2$res,
                   method = "Moran", nbclass = 30) %>% 
    as.data.frame()
cor %>% 
  ggplot(aes(x = dist.class*100, y = coef)) + 
  geom_point(aes(alpha = p.value < 0.01)) + geom_line() +
  geom_hline(yintercept = 0) +
  theme_bw() +
  xlab("Distance (km)") + ylab("Moran\'s I") +
  scale_x_log10()
```

## Non null

```{r}
data_test <- data_nn %>% 
  sample_n(1000) %>%
  mutate(intact = 1)
data_adj <- dnearneigh(data_test[c("x", "y")], 0, 10, longlat = T)
plot(data_adj, data_test[c("x", "y")])
```

```{r}
data_test <- data_nn %>%
  mutate(intact = 1)
data_adj <- dnearneigh(data_test[c("x", "y")], 0, 10, longlat = T)
```

```{r}
data_nn %>% 
  gather(climate, value, -x, -y, -deforested, -degraded) %>% 
  gather(type, percent, -x, -y, -climate, -value) %>% 
  ggplot(aes(percent, value, col = climate)) +
  geom_point(alpha = 0.1) +
  theme_bw() +
  facet_wrap(~ type, nrow = 2) +
  geom_smooth(method = "lm")
```

```{r }
reg <- spautolm(tasmax ~ 0 + intact + degraded + deforested, 
                data = data_test, 
                listw = nb2listw(data_adj, zero.policy = TRUE), 
                family = "CAR")
summary(reg)
```

```{r }
data2 <- data_test
data2$res <- residuals(reg)
data2 <- sample_n(data2, 1000)
cor <- pgirmess::correlog(data.frame(data2$x, data2$y), data2$res,
                   method = "Moran", nbclass = 30) %>% 
    as.data.frame()
cor %>% 
  ggplot(aes(x = dist.class*100, y = coef)) + 
  geom_point(aes(alpha = p.value < 0.01)) + geom_line() +
  geom_hline(yintercept = 0) +
  theme_bw() +
  xlab("Distance (km)") + ylab("Moran\'s I") +
  scale_x_log10()
```
