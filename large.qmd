# Colombian Amazon {.unnumbered}

```{r setup}
#| include: false
rm(list = ls()) ; invisible(gc()) ; set.seed(42)
library(tidyverse)
library(terra)
library(sf)
library(bayesplot)
library(spNNGP)
theme_set(bayesplot::theme_default())
knitr::opts_chunk$set(
  echo = F, message = F, warning = F, fig.height = 6, fig.width = 8,
  cache = T, cache.lazy = F)
```

```{r}
#| include: false
area <- st_read("results/limits/limits.shp")
pr_ind <- rast("results/data/chirps_indices.nc", subds="pr")
tas_ind <- rast("results/data/modis_indices.nc", subds="tas")
pr <- rast("results/data/chirps_anomalies.nc")[["pr"]]
tas <- rast("results/data/modis_anomalies.nc")[["tas"]]
deforest <- lapply(list.files("results/tmp/", pattern = "deforest", full.names = TRUE), rast) %>% 
  lapply(resample, pr) %>% 
  lapply(function(r) r*cellSize(r, unit = 'km')) %>% 
  lapply(function(r) ifel(r == 0, NA, r))
data <- lapply(deforest, as.data.frame, xy = T) %>% 
  bind_rows() %>% 
  rename(deforest = Dec2020) %>% 
  left_join(as.data.frame(pr, xy = TRUE)) %>% 
  left_join(as.data.frame(tas, xy = TRUE)) %>% 
  na.omit() %>% 
  group_by(x, y) %>% 
  summarise_all(mean) %>% 
  ungroup() %>% 
  mutate(intact = 1)
```

## Deforestation

We used the Tropical Moist Forest (TMF) product from the European Joint Research Centre (JRC) to asses forest surface evolution between 2001 and 2020 at 30-m and yearly resolutions. We focused on pixels categorized as undisturbed forest in 2001 and deforested in 2020. We aggregated the deforestation information to 0.01-degree (\~1km) by calculating the deforested surface in $km^2$. Deforestation is more prevalent in the North-West deforestation front. Larger spatial or time period could later be used, as well as including back degradation.

```{r}
ggplot() +
  tidyterra::geom_spatraster(data = do.call(mosaic, deforest)) +
  theme_bw() +
  scale_fill_viridis_c(expression(km^2), na.value = NA) +
  ggtitle("Deforestation", "2001-2020")
```

## Precipitation

We used CHIRPS data downscaled at 0.01-degree resolution with daily precipitation accumulation summed into yearly precipitation. We then calculated precipitation anomalies as the yearly means over two periods at the end (2018 to 2020) and start (2001 to 2003) of the study period. Using 3-y averages reduces the influences of climate variability. Precipitation is structured by a wet gradient from north-west to south-east. Anomalies are more heterogeneous, with a greater loss of precipitation in the centre of the region. Monthly or seasonal indices could be used at a later stage, but we must be wary of seasonal variations across space.

```{r}
ggplot() +
  tidyterra::geom_spatraster(data = pr_ind[[20]]) +
  theme_bw() +
  scale_fill_viridis_c("mm/year", na.value = NA) +
  ggtitle("Precipitaiton 2020")
```

```{r}
ggplot() +
  tidyterra::geom_spatraster(data = pr) +
  theme_bw() +
  scale_fill_viridis_c("mm/year", na.value = NA) +
  ggtitle("Precipitaiton anomalies", "2001:2003 vs 2018:2020")
```

## Temperature

Following @butt2023, we used land surface temperature (LST) data from MOD11A2 version 6 MODIS 8-d LST data at 0.01-degree resolution grid. We excluded data where the estimated emissivity error was greater than 0.02 and where the LST error was greater than 1 K. Extensive cloud cover can reduce the spatial and temporal availability of satellite data. For this reason, we focus our analysis on the dry season when there is less cloud cover. We thus worked with January the driest month in Guiavare. Dry season surface temperature changes were then calculated by comparing temperature of the driest month for two periods at the end (2018 to 2020) and start (2001 to 2003) of the study period. Using 3-y averages reduces the influences of climate variability. We computed variations in mean temperature (tas). Monthly or seasonal indices could be used at a later stage, but we must be wary of seasonal variations across space. Daily extrema could also be used.

```{r}
ggplot() +
  tidyterra::geom_spatraster(data = tas_ind[[20]]) +
  theme_bw() +
  scale_fill_viridis_c("°C", na.value = NA) +
  ggtitle("Temperature 2020")
```

```{r}
ggplot() +
  tidyterra::geom_spatraster(data = tas) +
  theme_bw() +
  scale_fill_viridis_c("°C", na.value = NA) +
  ggtitle("Temperature anomalies", "2001:2003 vs 2018:2020")
```

## Comparisons

Comparing deforestation surfaces to climate anomalies seems to indicate a decrease in precipitation but an increase in temperature with increasing deforestation surfaces. But caution should be taken because of possible spatial proximity between deforested pixels that could confound with the spatial structure of climate anomalies.

```{r}
data %>% 
  select(-intact) %>% 
  gather(variable, value, -x, -y, -deforest) %>% 
  ggplot(aes(deforest, value)) +
  geom_point(alpha = 0.1) +
  theme_bw() +
  geom_smooth(method = "lm") +
  facet_wrap(~ variable, scales = "free_y", nrow = 2)
```

```{r}
data %>% 
  select(-intact) %>% 
  gather(variable, value, -x, -y, -deforest) %>% 
  mutate(deforest = cut(deforest, breaks = seq(0, 1.3, by = 0.1),
                              labels = seq(0, 1.2, by = 0.1)+0.05)) %>% 
  ggplot(aes(deforest, value)) +
  geom_boxplot() +
  theme_bw() +
  geom_smooth(aes(x = as.numeric(deforest)), method = "lm") +
  facet_wrap(~ variable, scales = "free_y", nrow = 2)
```

## Linear regressions

Classic linear regression with accounting for spatial autocorrelation found a general and signficant decrease of precipitation (-189.94 mm/year) and temperature (-0.20 °C) and a significant decrease of precipitation (-306.05 mm/year) but a significant increase in temperature (+0.32 °C) with deforestation. However, inspecting models residuals revealed a significant spatial autocorrelation of model errors up to several hundred of kilometres questioning the robustness of the results.

```{r}
lm_pr <- lm(pr ~ 0 + intact + deforest, data)
lm_tas <- lm(tas ~ 0 + intact + deforest, data)
```

```{r}
sjPlot::tab_model(lm_pr, lm_tas)
```

```{r}
data2 <- data
data2$res_pr <- residuals(lm_pr)
data2$res_tas <- residuals(lm_tas)
data2 <- data2 %>% ungroup() %>% sample_n(1000)
cor_pr <- pgirmess::correlog(data.frame(data2$x, data2$y), data2$res_pr,
                   method = "Moran", nbclass = 30) %>% 
    as.data.frame() %>% 
  mutate(variable = "pr")
cor_tas <- pgirmess::correlog(data.frame(data2$x, data2$y), data2$res_tas,
                   method = "Moran", nbclass = 30) %>% 
    as.data.frame() %>% 
  mutate(variable = "tas")
bind_rows(cor_pr, cor_tas) %>% 
  ggplot(aes(x = dist.class*100, y = coef, col = variable)) + 
  geom_point(aes(alpha = p.value < 0.01)) + geom_line() +
  geom_hline(yintercept = 0) +
  theme_bw() +
  xlab("Distance (km)") + ylab("Moran\'s I") +
  scale_x_log10() +
  ylim(-1, 1) +
  ggtitle("Residuals spatial auto-correlation")
```

## Spatial regressions

To account for spatial autocorrelation, we took advantage of a method including spatial autocorrelation in model error (spNNGP, Gaussian univariate Bayesian spatial regression models using Nearest Neighbor Gaussian Processes). To assess the model performance, we first looked at trace plots of the Bayesian model. The acceptance rates were over 90% and the parameters seemed to have converged after the warm-up period. But looking closer, only the deforestation parameter for temperature seemed to have correctly converged besides others have low intervals of variations. However, residuals of the models are not anymore spatially structured indicating that the Nearest Neighbor Gaussian Processes removed this issue. In this results, we have a significant but small decrease of precipitation (-2 to -7 mm/Year) and a non significant increase in temperature (0-0.015°C) with increasing deforestation surface.

```{r}
#| eval: false
# rescale <- function(x) (x - mean(x))/(quantile(x,0.975) - quantile(x,0.025))
sr_pr <- spNNGP(formula = pr ~ 0 + intact + deforest,
                data = data,
                coords = data[c("x", "y")], 
                starting = list("phi" = 3 / 0.5, "sigma.sq" = 1, "tau.sq" = 1),
                tuning = list("phi" = 0.2), 
                priors = list("phi.Unif" = c(3 / 1, 3 / 0.1), 
                              "sigma.sq.IG" = c(2, 1), "tau.sq.IG" = c(2, 1)), 
                cov.model = "exponential",
                n.samples = 2000, 
                n.neighbors = 10, method = "latent", 
                n.omp.threads = 20, n.report = 1000, fit.rep = TRUE,
                sub.sample = list(start = 1000), return.neighbor.info = TRUE)
sr_tas <- spNNGP(formula = tas ~ 0 + intact + deforest,
                data = data,
                coords = data[c("x", "y")], 
                starting = list("phi" = 3 / 0.5, "sigma.sq" = 1, "tau.sq" = 1),
                tuning = list("phi" = 0.2), 
                priors = list("phi.Unif" = c(3 / 1, 3 / 0.1), 
                              "sigma.sq.IG" = c(2, 1), "tau.sq.IG" = c(2, 1)), 
                cov.model = "exponential",
                n.samples = 2000, 
                n.neighbors = 10, method = "latent", 
                n.omp.threads = 20, n.report = 1000, fit.rep = TRUE,
                sub.sample = list(start = 1000), return.neighbor.info = TRUE)
save(sr_pr, sr_tas, file = "save/large.Rdata")
```

```{r}
load("save/large.Rdata")
```

```{r}
cowplot::plot_grid(
  mcmc_trace(sr_pr$p.beta.samples, n_warmup = 1000) + ggtitle("Precipitation anomaly"),
  mcmc_trace(sr_tas$p.beta.samples, n_warmup = 1000) + ggtitle("Temperature anomaly"),
  nrow = 2
)
```

```{r}
cowplot::plot_grid(
  mcmc_trace(sr_pr$p.beta.samples[1001:2000,], iter1=1001) + ggtitle("Precipitation anomaly"),
  mcmc_trace(sr_tas$p.beta.samples[1001:2000,], iter1=1001) + ggtitle("Temperature anomaly"),
  nrow = 2
)
```

```{r}
cowplot::plot_grid(
  mcmc_hist(sr_pr$p.beta.samples[1001:2000,]) + ggtitle("Precipitation anomaly"),
  mcmc_hist(sr_tas$p.beta.samples[1001:2000,]) + ggtitle("Temperature anomaly"),
  nrow = 2
)
```

```{r}
data2 <- data
data2$res_pr <- residuals(sr_pr)$residuals.quantiles[,1]
data2$res_tas <- residuals(sr_tas)$residuals.quantiles[,1]
data2 <- data2 %>% ungroup() %>% sample_n(1000)
cor_pr <- pgirmess::correlog(data.frame(data2$x, data2$y), data2$res_pr,
                   method = "Moran", nbclass = 30) %>% 
    as.data.frame() %>% 
  mutate(variable = "pr")
cor_tas <- pgirmess::correlog(data.frame(data2$x, data2$y), data2$res_tas,
                   method = "Moran", nbclass = 30) %>% 
    as.data.frame() %>% 
  mutate(variable = "tas")
bind_rows(cor_pr, cor_tas) %>% 
  ggplot(aes(x = dist.class*100, y = coef, col = variable)) + 
  geom_point(aes(alpha = p.value < 0.01)) + geom_line() +
  geom_hline(yintercept = 0) +
  theme_bw() +
  xlab("Distance (km)") + ylab("Moran\'s I") +
  scale_x_log10() +
  ylim(-1, 1) +
  ggtitle("Residuals spatial auto-correlation")
```

```{r}
summary(sr_pr)
```

```{r}
summary(sr_tas)
```
