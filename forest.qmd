# Deforestation {.unnumbered}

```{r setup}
#| include: false
rm(list = ls()) ; invisible(gc()) ; set.seed(42)
library(tidyverse)
library(terra)
library(sf)
library(leaflet)
theme_set(bayesplot::theme_default())
knitr::opts_chunk$set(
  echo = F, message = F, warning = F, fig.height = 6, fig.width = 8,
  cache = T, cache.lazy = F)
```

We used the Tropical Moist Forest (TMF) product from the European Joint Research Centre (JRC) to asses forest surface evolution between 2000 and 2022 at 30-m and yearly resolutions.

## Colombian Amazon

We focused on pixels categorized as undisturbed forest in 2001 and deforested in 2022. We aggregated the deforestation information to 0.01-degree (\~1km) by calculating the deforested surface in $km^2$. Deforestation is more prevalent in the North-West deforestation front.

```{r tmfcadataprep}
#| include: false
#| eval: false
temp_r <- rast("results/data/modis_indices.nc")
area <- st_read("results/limits/limits.shp", quiet=T) %>% 
  st_set_crs(crs(temp_r))
prep_tmf <- function(tile){
  tmf_0 <- rast(
    paste0("data/JRC_TMF_AnnualChange_v1_", 
           tile,
           "/forobs/products/tmf_v1/AnnualChange/JRC_TMF_AnnualChange_v1_2000_",
           tile,
           ".tif")) %>% crop(area)
    msk <- ifel(tmf_0 != 1, NA, 1)
    tmf_1 <- rast(
    paste0("data/JRC_TMF_AnnualChange_v1_", 
           tile,
           "/forobs/products/tmf_v1/AnnualChange/JRC_TMF_AnnualChange_v1_2022_",
           tile,
           ".tif")) %>% crop(area) %>% mask(msk)
    tmf_1 <- as.factor(ifel(tmf_1 %in% 1:3, tmf_1, NA))
    deforest <- as.numeric(tmf_1 == 3) %>% 
      aggregate(37, method = "mean")%>% 
      resample(temp_r)
    writeRaster(deforest, paste0("results/tmp/tmf_", tile, "_deforested.tif"))
}
lapply(c("SAM_ID28_N0_W80",
         "SAM_ID29_N0_W70",
         "SAM_ID47_N10_W80",
         "SAM_ID48_N10_W70"),
       prep_tmf)
deforest <- lapply(list.files("results/tmp/", pattern = "deforest", full.names = TRUE), rast) %>% 
  lapply(function(r) r*cellSize(r, unit = 'km')) %>% 
  lapply(function(r) ifel(r == 0, NA, r))
deforest_all <- do.call(mosaic, deforest)
names(deforest_all) <- "deforest"
writeRaster(deforest_all, "results/data/tmf_deforested_2022_2000_amzaonia.tif")
```

```{r tmfcadata}
#| include: false
data <- rast("results/data/tmf_deforested_2022_2000_amzaonia.tif") %>% 
  as.data.frame(xy = TRUE) %>% 
  na.omit()
```

```{r tmfcadatafig}
ggplot() +
  tidyterra::geom_spatraster(data = rast("results/data/tmf_deforested_2022_2000_amzaonia.tif")) +
  theme_bw() +
  scale_fill_viridis_c(expression(km^2), na.value = NA) +
  ggtitle("Deforestation", "2000-2022")
```

```{r tmfcadatahist}
ggplot(data, aes(deforest)) +
  geom_histogram() +
  theme_bw() +
  scale_y_log10() +
  xlab("Deforested area (km2)") + ylab("Count (log10)")
```

```{r tmfcadatacor}
data2 <- sample_n(data, 1000)
cor <- pgirmess::correlog(data.frame(data2$x, data2$y), data2$deforest,
                   method = "Moran", nbclass = 30) %>% 
  as.data.frame()
cor %>% 
  ggplot(aes(x = dist.class*100, y = coef)) + 
  geom_point(aes(alpha = p.value < 0.01)) + geom_line() +
  geom_hline(yintercept = 0) +
  theme_bw() +
  xlab("Distance (km)") + ylab("Moran\'s I") +
  scale_x_log10()
```

## Capricho

We focused on pixels categorized as deforested and cumulated their surface in $km^2$ between 2000 and 2022.

```{r tmfcpdata}
#| include: false
area <- st_read("data/capricho/capricho.shp", quiet=T)
get_deforest_area <- function(year, tile = "SAM_ID47_N10_W80"){
  tmf <- rast(
    paste0("data/JRC_TMF_AnnualChange_v1_", 
           tile,
           "/forobs/products/tmf_v1/AnnualChange/JRC_TMF_AnnualChange_v1_", year, "_",
           tile,
           ".tif")) %>% crop(area) %>% 
  mask(area)
tmf <- as.numeric(tmf == 3)
tmf <- tmf*cellSize(tmf, unit = 'km')
  return(data.frame(year = year, area = sum(values(tmf), na.rm = T)))
}
deforest <- lapply(2000:2022, get_deforest_area) %>% 
  bind_rows()
```

```{r tmfcpfig}
ggplot(deforest, aes(year, area)) +
  geom_point() +
  theme_bw() +
  xlab("") + ylab("Cummulated deforested area (km2)") +
  geom_vline(xintercept = 2016, linetype = "dashed", col = "grey") +
  geom_smooth()
```
